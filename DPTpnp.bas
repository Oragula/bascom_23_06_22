$regfile = "m88def.dat"                                     ' говорим компилятору что у нас микропроцессор Atmega 88
'$regfile = "m328pdef.dat"
$crystal = 8000000                                          '7372800                                          ' говорим компилятору что процессор тактируется от генератора с частотой 7,372800 мегагерц
'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'Задаем константы
Const Старт_шим = 51                                       'величина ШИМ при стартовом импульсе ' 0=0%, 255=100%, 13=5%...
Dim Шаг_шим_в_байтах As Byte : Шаг_шим_в_байтах = 13        ' Величина = 255/кол-во шагов ШИМ. от 0 до 100% с шагом 5% выходит 100/5= 20 шагов. 255/20=13
Const Время_до_торможения = 2                               ' время после отключения ШИМ и перед началом динамического торможения чтобы избежать больших токов в обмотках двигателя и на контактах реле. 1 единица = 0,5 сек. Так 2единицы = 1 секунде
Const Коррекция_времени = 34797                             ' корекция длительности секунд отсчета. При уменьшении длительность увеличивается. макс значение 65536, мин =0. '36734 для кварца '7372800
Const Время_приветствия888мс = 2000
Const Время_приветствия____мс = 2000
Const Период_пищалки_кнопок = 830                           'чемь меньше, тем выше тон. Период равен кол-ву импульсов кварца
Const Длительность_пищалки_кнопок = 50                      'количество периодов
Const Период_писка_оконч_реж = 830
Const Длит_писка_оконч_реж = 1000
Const Верх_шима = 40                                        'делим на 2 и умножаем на шаг шима в 5%                   40/2*5=20*5=100%
Const Низ_шима = 0                                          ' минимальное значение ШИМ, которое можно задать 0=0%, 2=5%...40=100 %
Const Шаг_шима = 5                                          'НЕ МЕНЯТЬ ИНАЧЕ ПОЛЕТИТ ВСЯ ПРОГРАММА!!!
Const Верх_t = 1980                                         '1980 это предел времени*2 = 990 секунд
Const Верх_t_без_десятков = 1800                            'это предел времени без десятков*2=900 сек
Const Шаг_кнопки = 200                                      'это шаг кнопок для прибавления сотен к времени умноженный на 2= 100 сек
Const Время_показа = 1000                                   'время между отображением к примеру U1 в меню настройки и показом его значения, в мс.
'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'Конфигурация ног, таймеров, прерываний от кнопок, настройка ШИМ, объявление переменных:
Ddrd = &B11100000 : Portd = &B00011111 : Ddrb = &B00111111 : Portb = 0 : Ddrc = &B00110111 : Portc = &B01001000       'Конфигурация портов, включение внутренних подтягивающих резисторов
Relay1 Alias Portd.5 : Relay2 Alias Portc.5 : Speaker Alias Portc.4       ' называем пины как нам удобно
Pcmsk2 = &B00010011 : On Pcint2 Buttons : Pcifr.pcif2 = 0 : Enable Pcint2       ' Разрешаем прерывание на кнопки. При нажатии любой кнопки переходим на подпрограмму   Buttons
Config Timer2 = Timer , Prescale = 64 : On Timer2 Pulse : Enable Timer2       ' конфигурируем таймер 2 чтоб потом на него повесить алгоритм отображения цифр ' назначаем подпрограмму, которая будет запускатся по переполнению 2го таймера
Config Timer1 = Timer , Prescale = 256 : On Timer1 Отсчет : Enable Timer1       ' конфигурируем таймер 2 чтоб потом на него повесить алгоритм отображения цифр ' назначаем подпрограмму, которая будет запускатся по переполнению 2го таймера
Set Tccr0a.com0a1 : Set Tccr0a.wgm00 : Set Tccr0b.cs01                         'конфигурация ШИМ  на PD.6
Enable Interrupts
Dim I As Byte , Y As Byte , Z As Integer , J As Integer , Uпо4 As Integer , Uпо4eep As Eram Integer , Пропустить As Bit , Общее_время_режима As Integer , Остановка As Bit , Направление As Bit , Стчеч_времени_показа As Integer , Номер_изм_параметра As Byte , Номер_реж_в_меню As Integer , Параметр_номер As Integer , T(9) As Integer , Teram(9)as Eram Integer , Ti As Integer , U(6) As Integer , Ueram(6) As Eram Integer , Текущий_режим As Eram Byte , Код_енкодера As Byte , New_код_енкодера As Byte , Вращение_энкодера As Bit , Энкодер As Integer , Запрет_энкодера As Bit , Состояние_индикатора As Byte , Время As Integer , Цифра(4) As Integer , X As Byte , Sets As Bit , Fwd As Bit , Rev As Bit , Код_кнопок As Byte , Включить_звук_нажатия As Bit       ' объявляем переменные
'-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'объявляем функции обработки событий
Declare Sub Меню_шим(byval Номер_параметра1 As Integer , Byval Верх1 As Integer , Byval Низ As Integer , Byval Шаг As Integer , Byref Ui As Integer )
Declare Sub Меню_времени(byval Номер_параметра2 As Integer , Byval Верх2 As Integer , Byval Вер_без_десятков As Integer , Byval Шаг_кнопок As Integer , Byref Ti As Integer)
Declare Sub Сохранить
Declare Sub Обработать_кнопки
Declare Sub Какое_направление
Declare Sub Выполнить_торможение
Declare Sub Торможение_по3
Declare Sub Собрать_схему
Declare Sub Запустить_двигатель
Declare Sub Установить_режим_шим(byval Номер_параметра3 As Integer)
Declare Sub Отсчет_времени
Declare Sub Восстановить_из_eeprom
'-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'Приветствие:
For I = 0 To 3 : Цифра(i) = 8 : Next : Waitms Время_приветствия888мс       ' Зажигаем 888
For I = 0 To 3 : Цифра(i) = 11 : Next : Waitms Время_приветствия____мс       ' Гасим индикатор
'------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Восстановить_из_eeprom
'------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'Меню выбора режима работы
Waitms 100
T(7) = 3                                                    'время отсрочки запуска, в с.
T(8) = 2                                                    'время стартового импульса, в с.
T(9) = 5                                                    'время торможения, в с.
Do
Обработать_кнопки                                           'переход на функцию
If Энкодер > 6 Then : Энкодер = 6 : Elseif Энкодер < 0 Then : Энкодер = 0 : End If
Номер_реж_в_меню = Энкодер / 2
Select Case Номер_реж_в_меню                                ' отображаем текущий режим и в случае нажатия кнопок переходим в обработку
Case 0 : Цифра(1) = 12                                      ' отображение "ПО1"
          Цифра(2) = 0 : Цифра(3) = 1
          If Rev = 1 Or Fwd = 1 Then : Gosub По1 : Elseif Sets = 1 Then : Gosub Меню_по1 : End If
Case 1 : Цифра(1) = 12
          Цифра(2) = 0 : Цифра(3) = 2                       ' отображение "ПО2"
          If Rev = 1 Or Fwd = 1 Then : Gosub По2 : Elseif Sets = 1 Then : Gosub Меню_по2 : End If
Case 2 : Цифра(1) = 12
          Цифра(2) = 0 : Цифра(3) = 3                       ' отображение "ПО3"
          If Rev = 1 Or Fwd = 1 Then : Gosub По3 : Elseif Sets = 1 Then : Gosub Меню_по3 : End If
Case 3 : Цифра(1) = 12
          Цифра(2) = 0 : Цифра(3) = 4                       ' отображение "ПО4"
          If Rev = 1 Or Fwd = 1 Then : Gosub По4 : Elseif Sets = 1 Then :
           Waitms 50 : Sound Speaker , Длительность_пищалки_кнопок , Период_пищалки_кнопок : Waitms 50
          Sound Speaker , Длительность_пищалки_кнопок , Период_пищалки_кнопок : End If
End Select
Waitms 2
Loop
'---------------------------------------------------------------------------------------------------------------------------------------------------------
'---------------------------------------------------------------------------------------------------------------------------------------------------------
'Режимы
По1:
Текущий_режим = Номер_реж_в_меню                            'сохраняем в EEPROM текущий режим
Какое_направление                                           'Узнаем куда двигатель будет вращатся (какая кнопка была нажата)
Собрать_схему
Запустить_двигатель
Call Установить_режим_шим(1)                                ' U(i). 1 задает какое U брать для шим
Общее_время_режима = T(1)
Время = T(1) : Отсчет_времени                               'Запуск отсчета
Call Выполнить_торможение
Пропустить = 0                                              ' в случае экстренной остановки этот параметр пробегает мимо всех режимов и выполняет остановку. Тут обнуляется
Return
'---------------------------------------------------------------------------------------------------------------------------------------------------------
По2:
Текущий_режим = Номер_реж_в_меню                            'сохраняем в EEPROM текущий режим
Какое_направление                                           '
Собрать_схему
Запустить_двигатель
Общее_время_режима = T(2) + T(3) : Общее_время_режима = Общее_время_режима + T(4)       ' =t1+t2+t3
Call Установить_режим_шим(2)                                ' U(i). 1 задает какое U брать для шим
Время = T(2) : Отсчет_времени
Call Установить_режим_шим(3)                                ' U(i). 1 задает какое U брать для шим
Время = T(3) : Отсчет_времени
Call Установить_режим_шим(4)                                ' U(i). 1 задает какое U брать для шим
Время = T(4) : Отсчет_времени
Call Выполнить_торможение
Пропустить = 0
Return
'---------------------------------------------------------------------------------------------------------------------------------------------------------
По3:
Текущий_режим = Номер_реж_в_меню                            'сохраняем в EEPROM текущий режим
Какое_направление                                           'Направление=Направление
Stop Timer1 : Общее_время_режима = T(5) + T(6) : Общее_время_режима = Общее_время_режима * 2 : J = T(7) + T(8) : J = J * 4 : J = J + T(9) : J = J + T(9) : Общее_время_режима = Общее_время_режима + J : J = Время_до_торможения * 2 : Общее_время_режима = Общее_время_режима + J : Start Timer1       'Считаем Общее Время Режима = T1 * 2 + T2 * 2 + T0 * 4 + Ti * 4 + Общее_время_режима * 4 +tc*3

For J = 1 To 2
Собрать_схему
Запустить_двигатель
Call Установить_режим_шим(5)                                ' U(i). 1 задает какое U брать для шим
Время = T(5) : Отсчет_времени                               'Запуск отсчета
Торможение_по3
Toggle Направление                                          'меняем Направление
Next
For J = 1 To 2
Собрать_схему
Запустить_двигатель
Call Установить_режим_шим(6)                                ' U(i). 1 задает какое U брать для шим
Время = T(6) : Отсчет_времени                               'Запуск отсчета
If J = 2 Then Call Выполнить_торможение Else Call Торможение_по3
Toggle Направление
Next
Пропустить = 0
Return
'---------------------------------------------------------------------------------------------------------------------------------------------------------
По4:
Текущий_режим = Номер_реж_в_меню                            'сохраняем в EEPROM текущий режим
Какое_направление                                           'Направление=Направление
Собрать_схему
Запустить_двигатель
Uпо4 = Uпо4eep : Энкодер = Uпо4 * 2                         ' берем значение из eeprom
Do
  If Остановка = 1 Then : Call Выполнить_торможение : Set Пропустить : Exit Do : End If       'остановка при нажатии кнопок
'  I = Uпо4 / Шаг_шима : If Uпо4 = 100 Then : Ocr0a = 255 : Else : Ocr0a = I * Шаг_шим_в_байтах : End If       ' пересчитываем 0-100% в 0-255 байт, понятные контроллеру.
                                               ' пересчитываем 0-100% в 0-255 байт, понятные контроллеру.
Uпо4 = Uпо4 / 5
Ocr0a = Lookup(uпо4 , Таблица_шим)
Uпо4 = Uпо4 * 5

   Цифра(3) = Uпо4 Mod 10 : Цифра(1) = Uпо4 / 100 : Цифра(4) = Uпо4 / 10 : Цифра(2) = Цифра(4) Mod 10       ' разбиваем переменную на 3 разряда
   Обработать_кнопки
   If Энкодер > Верх_шима Then : Энкодер = Верх_шима : Elseif Энкодер < Низ_шима Then : Энкодер = Низ_шима : End If
   Uпо4 = Энкодер / 2
   Uпо4 = Uпо4 * Шаг_шима                                   'подсчитываем % ШИМ с шагом 5
Loop
Call Выполнить_торможение
Пропустить = 0
Энкодер = 6                                                 ' для возврата в ПО4 в главном меню
Uпо4 = Uпо4 / Шаг_шима
Uпо4eep = Uпо4                                              'сохраняем в eeprom
Return
'---------------------------------------------------------------------------------------------------------------------------------------------------------
'---------------------------------------------------------------------------------------------------------------------------------------------------------
' Меню настройки параметров
Меню_по1:
Параметр_номер = 1                                          ' Для отображения U1 T1
Call Меню_шим(параметр_номер , Верх_шима , Низ_шима , Шаг_шима , U(1))       'Задаем что нам нужно изменить U(1) и пределы.
Call Меню_времени(параметр_номер , Верх_t , Верх_t_без_десятков , Шаг_кнопки , T(1))       ' тоже самое только для t    '
Сохранить
Энкодер = 0                                                 'возвращаемся в главное меню ПО1
Return
'--------------------------------------------------------------------------------------------------------------------------------------------------------
Меню_по2:
Параметр_номер = 1
Номер_изм_параметра = 2
Do
Call Меню_шим(параметр_номер , Верх_шима , Низ_шима , Шаг_шима , U(номер_изм_параметра))
Call Меню_времени(параметр_номер , Верх_t , Верх_t_без_десятков , Шаг_кнопки , T(номер_изм_параметра))       '
Incr Параметр_номер
Incr Номер_изм_параметра
Loop Until Параметр_номер = 4
Сохранить
Энкодер = 2                                                 'возвращаемся в главное меню ПО2
Return
'--------------------------------------------------------------------------------------------------------------------------------------------------------
Меню_по3:
Параметр_номер = 1
Номер_изм_параметра = 5
Do
Call Меню_шим(параметр_номер , Верх_шима , Низ_шима , Шаг_шима , U(номер_изм_параметра))
Call Меню_времени(параметр_номер , Верх_t , Верх_t_без_десятков , Шаг_кнопки , T(номер_изм_параметра))       '
Incr Параметр_номер
Incr Номер_изм_параметра
Loop Until Параметр_номер = 3
Сохранить
Энкодер = 4                                                 'возвращаемся в главное меню ПО3
Return
'--------------------------------------------------------------------------------------------------------------------------------------------------------
Меню_нас:
Параметр_номер = 100                                        'для отображения t0 ti, tc
Номер_изм_параметра = 7
Do
Call Меню_времени(параметр_номер , Верх_t , Верх_t_без_десятков , Шаг_кнопки , T(номер_изм_параметра))       '
Incr Параметр_номер
Incr Номер_изм_параметра
Loop Until Номер_изм_параметра = 10
Сохранить
Энкодер = 8                                                 'возвращаемся в главное меню НАС
Return
'----------------------------------------------------------------------------------------------------------------------------------------------------------
'----------------------------------------------------------------------------------------------------------------------------------------------------------
'вывод информации на индикатор по таймеру2
Pulse:                                                      ' подпрограмма прерываний таймера0 для работы с семисегментником
Ddrc.x = 0                                                  ' Гасим зажжонный индикаторы
   Incr X : If X = 3 Then X = 0                             ' При каждом срабатывании таймера выбираем какой сегмент будем показывать от 0,1,2
   Состояние_индикатора = Lookup(цифра(x + 1) , Dta) : Portb = Состояние_индикатора : Portd.7 = Состояние_индикатора.6       ' вывод числа на минусовые клеммы сегментов.
   Ddrc.x = 1                                               'Зажигаем индикатор № x
Return
       Dta:                                                 '  таблица с данными о цифрах зажигает по порядку : 0123456789.
'        Data &H3F , &H06 , &H5B , &H4F , &H66 , &H6D , &H7D , &H07 , &H7F , &H6F , &H40 , &H00 , &H37 , &H76 , &H77 , &H39 , &H3E , &H78 , &H10       'общий катод
       Data &HC0 , &HF9 , &HA4 , &HB0 , &H99 , &H92 , &H82 , &HF8 , &H80 , &H90 , &HBF , &HFF , &HC8 , &H89 , &H88 , &HC6 , &HC1 , &H87 , &HEF       'общий анод
       '      0       1    2       3       4     5      6      7      8      9      -     Пусто    П     H       A       C     U       t     i
'                                                                                  10      11     12    13      14     15     16      17    18
'------------------------------------------------------------------------------------------------------------------------------------------------------------
 'отсчет времени режимов по таймеру 1
Отсчет:
Timer1 = Коррекция_времени
Decr Время : If Время <= 0 Then Время = 0
Decr Общее_время_режима : If Общее_время_режима <= 0 Then Общее_время_режима = 0
Return
'------------------------------------------------------------------------------------------------------------------------------------------------------------
'обработка прерывания кнопок
Buttons:
Код_кнопок = Pind                                           'берем значения с пинов кнопок и энкодера
Код_кнопок = Код_кнопок And &B00010011                      ' оставляем значения ryjgjr
If Код_кнопок <> &B00010011 Then Set Остановка              ' флаг остановки
Return
'--------------------------------------------------------------------------------------------------------------------------------------------------------
'обработка энкодера и кнопок
Sub Обработать_кнопки
'---------------Энкодер
New_код_енкодера = Pind And &B00001100                      'по маске отбираем биты энкодера
If New_код_енкодера <> Код_енкодера Then Set Вращение_энкодера       'флаг вращения энкодера
Select Case Код_енкодера

Case &B00001000 : If New_код_енкодера = &B00001100 Then Incr Энкодер       'Decr на ножках энкодера постоянно либо 0 либо 1. Всего 4 возможных комбинации. Проверяем не изменилось ли состояние.
                   If New_код_енкодера = &B00000000 Then Decr Энкодер       'Incr - было

Case &B00000000 : If New_код_енкодера = &B00001000 Then Incr Энкодер       'Decr
                   If New_код_енкодера = &B00000100 Then Decr Энкодер       'Incr

Case &B00000100 : If New_код_енкодера = &B00000000 Then Incr Энкодер       'Decr
                  If New_код_енкодера = &B00001100 Then Decr Энкодер       'Incr

Case &B00001100 : If New_код_енкодера = &B00000100 Then Incr Энкодер       'Decr
                   If New_код_енкодера = &B00001000 Then Decr Энкодер       'Incr
End Select
Код_енкодера = New_код_енкодера

'----------------Кнопки
                      'по маске отбираем биты кнопок
Select Case Код_кнопок                                      ' обрабатываем код кнопок
Case &B00010010 : Set Rev
                   Reset Fwd : Reset Sets                   'rev
Case &B00010001 : Set Fwd
                   Reset Rev : Reset Sets                   ' ff
Case &B00000011 : Set Sets
                   Reset Fwd : Reset Rev                    'set
Case Else : Reset Fwd
             Reset Rev
             Reset Sets
End Select
If Код_кнопок = 18 Or Код_кнопок = 17 Or Код_кнопок = 3 Then : Sound Speaker , Длительность_пищалки_кнопок , Период_пищалки_кнопок : Код_кнопок = 0 : End If       'пищалка кнопок
End Sub
'--------------------------------------------------------------------------------------------------------------------------------------------------------------
'функция меню обработки U(i)
Sub Меню_шим(byval Номер_параметра1 As Integer , Byval Верх1 As Integer , Byval Низ As Integer , Byval Шаг As Integer)       ', Ui As Integer )
 Цифра(1) = 11 : Цифра(2) = 16 : Цифра(3) = Номер_параметра1       ' Отображение U1
 Вращение_энкодера = 0
 Waitms 100                                                 'подавление дребезга
  Стчеч_времени_показа = 0
  Do
   Обработать_кнопки
   If Sets = 1 Then : Reset Sets : Goto Конецu : End If     'Уходим при нажатии SET
   If Вращение_энкодера = 1 Then Exit Do                    ' если начали крутить энкодер то прекращаем отображать U1
   Incr Стчеч_времени_показа : Waitms 1
  Loop Until Стчеч_времени_показа = Время_показа
 Энкодер = Ui * 2 : Энкодер = Энкодер / Шаг
  Do                                                        'Настройка U1
   Цифра(3) = Ui Mod 10 : Цифра(1) = Ui / 100 : Цифра(4) = Ui / 10 : Цифра(2) = Цифра(4) Mod 10       ' разбиваем переменную на 3 разряда
   Обработать_кнопки
   If Энкодер > Верх1 Then : Энкодер = Низ : Elseif Энкодер < Низ Then : Энкодер = Верх1 : End If
   Ui = Энкодер / 2 : Ui = Ui * Шаг                         'подсчитываем % ШИМ с шагом 5
   If Sets = 1 Then : Reset Sets : Exit Do : End If         'выход
  Loop
Конецu:
End Sub
'--------------------------------------------------------------------------------------------------------------------------------------------------------------
'функция меню обработки T(i)
Sub Меню_времени(byval Номер_параметра2 As Integer , Byval Верх2 As Integer , Byval Вер_без_десятков As Integer , Byval Шаг_кнопок As Integer , Byref T As Integer)
  Цифра(1) = 11 : Цифра(2) = 17                             ' Отображение t1
   If Номер_параметра2 = 100 Then : Цифра(3) = 0 : Elseif Номер_параметра2 = 101 Then : Цифра(3) = 18 : Elseif Номер_параметра2 = 102 Then : Цифра(3) = 15 : Else : Цифра(3) = Номер_параметра2 : End If       'отображение ti
  Вращение_энкодера = 0
  Waitms 100                                                'подавление дребезга
 Стчеч_времени_показа = 0
 Do
   Обработать_кнопки
   If Sets = 1 Then : Reset Sets : Goto Конецt : End If     'Уходим при нажатии SET
   If Вращение_энкодера = 1 Or Rev = 1 Or Fwd = 1 Then Exit Do       ' если начали крутить энкодер то прекращаем отображать U1
   Incr Стчеч_времени_показа : Waitms 1
  Loop Until Стчеч_времени_показа = Время_показа
   Энкодер = Ti * 2
 Do                                                         'Настройка U1
   Цифра(3) = Ti Mod 10 : Цифра(1) = Ti / 100 : Цифра(4) = Ti / 10 : Цифра(2) = Цифра(4) Mod 10       ' разбиваем переменную на 3 разряда
   Обработать_кнопки
   If Энкодер > Вер_без_десятков And Rev = 1 Then : Энкодер = Энкодер - Вер_без_десятков : Elseif Rev = 1 Then : Энкодер = Энкодер + Шаг_кнопок : Waitms 100 : End If       'добавление +100 к t1
   If Энкодер < Шаг_кнопок And Fwd = 1 Then : Энкодер = Вер_без_десятков + Энкодер : Elseif Fwd = 1 Then : Энкодер = Энкодер - Шаг_кнопок : Waitms 100 : End If       '  -100 от t1
   If Энкодер < 0 Then : Энкодер = Верх2 : Elseif Энкодер > Верх2 Then : Энкодер = 0 : End If       ' диапазон от 0 до 990 сек
   Ti = Энкодер / 2
   If Sets = 1 Then : Reset Sets : Exit Do : End If         ' при нажатии кнопки set уходим
 Loop
 Конецt:
 End Sub
'--------------------------------------------------------------------------------------------------------------------------------------------------------------
'функции режимов
Sub Какое_направление
Направление = Fwd : Fwd = 0 : Rev = Fwd                     ' определяем направление.
For I = 1 To 3 : Цифра(i) = 11 : Next                       ' очищаем индикатор
Y = 0
Bitwait Pind.0 , Set : Bitwait Pind.1 , Set : Bitwait Pind.4 , Set : Waitms 100 : Bitwait Pind.0 , Set : Bitwait Pind.1 , Set : Bitwait Pind.4 , Set       'ждем пока отпустят кнопки
End Sub
'--------------------------------------------------------------------------------------------------------------------------------------------------------------
Sub Собрать_схему
If Пропустить = 0 Then                                      'В случае если нажата любая из кнопок для быстрой остановки пропускаем все функции и останавливаемся. Выходить из подпрограмм оператором GOTO нельзя.
Остановка = 0
Y = 0 : I = 0
Ocr0a = 0 : Delay                                           ' ШИМ=0 и краткая задержка перед сборкой схемы. Строка на всякий случай.
If Направление = 1 Then : Set Relay1 : Reset Relay2 : Else : Set Relay2 : Reset Relay1 : End If       ' включаем реле (собираем схему прямого или обратного пуска)
Do                                                          ' цикл ожидания t0 пока схема собирается
If Остановка = 1 Then : Call Выполнить_торможение : Set Пропустить : Exit Do : End If       'остановка при нажатии кнопок
Z = Y / 2 : If Z = T(7) Then Exit Do : Incr Y               'подсчет сколько раз прошли цикл. Каждый раз это 0,5 секунды. Когда кол-во раз /2 совпадет с параметром T0 - выходим из цикла
Цифра(1) = 11 : Цифра(2) = 10 : Цифра(3) = 11               'Отображаем статичную черту на среднем символе " - " что говорит о сборке схемы и что двигатель не вращается
Waitms 500
Loop
Цифра(2) = 11
End If
End Sub
'--------------------------------------------------------------------------------------------------------------------------------------------------------------
Sub Запустить_двигатель
If Пропустить = 0 Then
Y = 0 : I = 1
Ocr0a = Старт_шим                                           'стартовый импульс 100%
Do
If Остановка = 1 Then : Call Выполнить_торможение : Set Пропустить : Exit Do : End If       'остановка при нажатии кнопок
Z = Y / 2
If Z = T(8) Then Exit Do : Incr Y
If Направление = 1 Then : Incr I : If I > 4 Then I = 1 : Else : Decr I : If I < 1 Then I = 4 : End If       ' переменная для динамического движения знака "-" по индикатору что говорит о том что пошел стартовый импульс и двигатель начинает вращатся.
Цифра(i) = 10 : Waitms 500 : Цифра(i) = 11                  ' вывод динамического "-" на индикатор
Loop
End If
End Sub
'--------------------------------------------------------------------------------------------------------------------------------------------------------------
Sub Установить_режим_шим(byval Номер_параметра3 As Integer)
If Пропустить = 0 Then
U(номер_параметра3) = U(номер_параметра3) / 5
Ocr0a = Lookup(u(номер_параметра3) , Таблица_шим)
U(номер_параметра3) = U(номер_параметра3) * 5

End If
End Sub


       Таблица_шим:
'       Data 0 , 6 , 10 , 15 , 20 , 30 , 40 , 55 , 70 , 90 , 110 , 130 , 145 , 160 , 175 , 190 , 200 , 215 , 230 , 240 , 255
        Data 0 , 1 , 2 , 3 , 4 , 6 , 10 , 15 , 20 , 30 , 40 , 140 , 150 , 160 , 170 , 190 , 200 , 210 , 230 , 240 , 255  ' изначальная настройка для холостого хода
'--------------------------------------------------------------------------------------------------------------------------------------------------------------
Sub Отсчет_времени
If Пропустить = 0 Then
Do
If Остановка = 1 Then : Call Выполнить_торможение : Set Пропустить : Exit Do : End If       'остановка при нажатии кнопок
If Общее_время_режима > 999 Then                            'мигаем 999 если общее время больше
I = Общее_время_режима Mod 2
If I = 0 Then : Цифра(1) = 9 : Цифра(2) = Цифра(1) : Цифра(3) = Цифра(1) : Else : Цифра(1) = 11 : Цифра(2) = Цифра(1) : Цифра(3) = Цифра(1) : End If
Else
Цифра(3) = Общее_время_режима Mod 10 : Цифра(1) = Общее_время_режима / 100 : Цифра(4) = Общее_время_режима / 10 : Цифра(2) = Цифра(4) Mod 10       'показываем оставшееся время
End If
Loop Until Время = 0
End If
End Sub
'--------------------------------------------------------------------------------------------------------------------------------------------------------------
Sub Выполнить_торможение
If Пропустить = 0 Then
Ocr0a = 0 :
Sound Speaker , Длит_писка_оконч_реж , Период_писка_оконч_реж
Цифра(1) = 11 : Цифра(2) = 10 : Цифра(3) = 11               'Отображаем статичную черту на среднем символе " - " что говорит что двигатель останавливается
Waitms Время_до_торможения : Reset Relay1 : Reset Relay2    'выключаем все и запускаем динамическое торможение
Wait T(9)                                                   ' ждем Tc до полной остановки. На дисплее все также отображается статичная " - "
End If
End Sub
'--------------------------------------------------------------------------------------------------------------------------------------------------------------
Sub Торможение_по3
Ocr0a = 0
Y = 0 : Z = 0
Do
If Остановка = 1 Then : Call Выполнить_торможение : Exit Do : End If
Z = Y / 2 : If Z = T(9) Then Exit Do : Incr Y
Цифра(1) = 11 : Цифра(2) = 10 : Цифра(3) = 11               'Отображаем статичную черту на среднем символе " - " что говорит что двигатель останавливается
If Время_до_торможения <= Z Then : Reset Relay1 : Reset Relay2 : End If       'выключаем все и запускаем динамическое торможение
Waitms 500                                                  ' ждем Tc до полной остановки. На дисплее все также отображается статичная " - "
Loop
End Sub
'--------------------------------------------------------------------------------------------------------------------------------------------------------------
'Обновление EEPROM
Sub Сохранить
Цифра(1) = 10 : Цифра(2) = Цифра(1) : Цифра(3) = Цифра(1) : Waitms 1000       'показываем "---"
Цифра(1) = 11 : Цифра(2) = Цифра(1) : Цифра(3) = Цифра(1) : Waitms 500       ' гасим индикатор
Disable Interrupts                                          ' Запрещаем прерывания перед записью
For I = 1 To 9 : If T(i) <> Teram(i) Then Teram(i) = T(i) : Next       'проверяем обновилось ли значение. Если обновилось то записываем
For I = 1 To 9 : If U(i) <> Ueram(i) Then Ueram(i) = U(i) : Next       'проверяем обновилось ли значение. Если обновилось то записываем
Enable Interrupts                                           'Разрешаем прерывания
End Sub
'--------------------------------------------------------------------------------------------------------------------------------------------------------------
Sub Восстановить_из_eeprom:
I = Текущий_режим : Энкодер = I * 2                         ' Читаем последний оработанный режим для отображения на индикаторе
For I = 1 To 6 : U(i) = Ueram(i) : Next                     ' читаем шим
For I = 1 To 9 : T(i) = Teram(i) : Next                     ' читаем времена
End Sub